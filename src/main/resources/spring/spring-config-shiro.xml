<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


    <!-- 缓存管理器 -->
    <bean id="cacheManager" class="cn.slycmiaoxi.common.SpringCacheManagerWrapper">
        <property name="cacheManager" ref="springCacheManager"/>
    </bean>

    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="cn.slycmiaoxi.realm.RetryLimitHashedCredentialsMatcher">
        <constructor-arg ref="cacheManager"/>
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="1"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>

    <!-- Realm实现 -->
    <bean id="userRealm" class="cn.slycmiaoxi.realm.CustomRealm">
        <!-- 将上面声明的密码匹配器注入到自定义 Realm 的属性中去 -->
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <!-- 配置缓存相关 -->
        <!-- 启用缓存 -->
        <property name="cachingEnabled" value="false"/>
        <!-- 开启认证缓存-->
        <!--   <property name="authenticationCachingEnabled" value="true"/>
          指定认证缓存的名字(与 ehcache.xml 中声明的相同)
          <property name="authenticationCacheName" value="authenticationCache"/>
             开启授权缓存
          <property name="authorizationCachingEnabled" value="true"/>
          指定授权缓存的名字(与 ehcache.xml 中声明的相同)
          <property name="authorizationCacheName" value="authorizationCache"/>  -->
    </bean>

    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg name="name" value="jeesite.session.id"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>

    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="180"/><!-- 30天 -->
    </bean>

    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!-- 会话DAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

    <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
        <property name="sessionListeners" ref="KickOutSessionListener"/>
    </bean>


    <!--  自定义session监听器 -->
    <bean id="KickOutSessionListener" class="cn.slycmiaoxi.listener.KickOutSessionListener">
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="cacheManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>

    </bean>

    <bean id="forceLogoutFilter" class="cn.slycmiaoxi.filter.ForceLogoutFilter"/>
    <bean id="lockUserFilter" class="cn.slycmiaoxi.filter.LockUserFilter"></bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>


    <!--并发登录控制-->
    <bean id="kickoutSessionFilter" class="cn.slycmiaoxi.filter.KickoutSessionFilter">
        <property name="cacheManager" ref="cacheManager"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="kickoutAfter" value="false"/>
        <property name="maxSession" value="1"/>
        <property name="kickoutUrl" value="/index.jsp"/>
    </bean>


    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/unauthorized.jsp"/>
        <property name="unauthorizedUrl" value="/unauthorized.jsp"/>
        <property name="filters">
            <util:map>
                <entry key="forceLogout" value-ref="forceLogoutFilter"/>
                <entry key="kickout" value-ref="kickoutSessionFilter"/>
                <entry key="lockUser" value-ref="lockUserFilter"/>
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /core/v1/tUser/login = lockUser,kickout
                <!--个人用户后台-->
                /core/v1/tClient/**=authc
                <!--留言板-->
                /core/v1/tMessageInfo/addTop=authc
                /core/v1/tMessageInfo/addReply=authc
                /core/v1/tMessageInfo/delete=authc
                <!--   后台管理员界面权限 -->
                /core/v1/userOnline/**=authc,roles[admin]
                /core/v1/tLoginLog/**=authc,roles[admin]
                /core/v1/tUser/show/**=authc,roles[admin]
                /core/v1/tUser/delete=authc,roles[admin]
                /core/v1/tUser/defriend=authc,roles[admin]
                /core/v1/tUser/edit=authc,roles[admin]
                /core/v1/tRole/**=authc,roles[admin]
                /core/v1/tBlogInfo/sysBlogShow/**=authc,roles[admin]
                /core/v1/tBlogInfo/add=authc
                /core/v1/tBlogInfo/updateState=authc,roles[admin]
                /core/v1/tBlogInfo/update=authc,roles[admin]
                /core/v1/tCommentInfo/sysCommentShow/**=authc,roles[admin]
                /core/v1/tCommentInfo/delete=authc,roles[admin]
                /core/v1/tCommentInfo/add=authc
                /core/v1/tFloorInfo/**=authc,roles[admin]
                /core/v1/tAlgotithmsType/add=authc,roles[admin]
                /core/v1/tAlgotithmsInfo/add=authc,roles[admin]
                /core/v1/tAlgotithmsInfo/show=authc,roles[admin]
                /core/v1/activemq/show=authc,roles[admin]
                /** =forceLogout, anon
            </value>
        </property>
    </bean>


</beans>